{"id":"index.js","dependencies":[{"name":"/Users/zhangzhengming/Documents/appshell.io/bridge/proj/WebViewSample/package.json","includedInParent":true,"mtime":1579417128886},{"name":"../../js/dist/webview.js","loc":{"line":1,"column":21},"parent":"/Users/zhangzhengming/Documents/appshell.io/bridge/proj/WebViewSample/index.js","resolved":"/Users/zhangzhengming/Documents/appshell.io/bridge/js/dist/webview.js"}],"generated":{"js":"\"use strict\";\n\nvar JSB = _interopRequireWildcard(require(\"../../js/dist/webview.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nwindow.onClickCallNative = function () {\n  console.log('yes?');\n  JSB.callNative(\"io.appshell.bridge.test/test\", {\n    key: \"value\"\n  });\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"name":"window","generated":{"line":9,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":6},"source":"index.js","original":{"line":4,"column":6}},{"name":"onClickCallNative","generated":{"line":9,"column":7},"source":"index.js","original":{"line":4,"column":7}},{"generated":{"line":9,"column":24},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":27},"source":"index.js","original":{"line":4,"column":27}},{"generated":{"line":9,"column":39},"source":"index.js","original":{"line":4,"column":33}},{"name":"console","generated":{"line":10,"column":0},"source":"index.js","original":{"line":5,"column":2}},{"name":"console","generated":{"line":10,"column":2},"source":"index.js","original":{"line":5,"column":2}},{"generated":{"line":10,"column":9},"source":"index.js","original":{"line":5,"column":9}},{"name":"log","generated":{"line":10,"column":10},"source":"index.js","original":{"line":5,"column":10}},{"generated":{"line":10,"column":13},"source":"index.js","original":{"line":5,"column":2}},{"generated":{"line":10,"column":14},"source":"index.js","original":{"line":5,"column":14}},{"generated":{"line":10,"column":20},"source":"index.js","original":{"line":5,"column":2}},{"name":"JSB","generated":{"line":11,"column":0},"source":"index.js","original":{"line":6,"column":2}},{"name":"JSB","generated":{"line":11,"column":2},"source":"index.js","original":{"line":6,"column":2}},{"generated":{"line":11,"column":5},"source":"index.js","original":{"line":6,"column":5}},{"name":"callNative","generated":{"line":11,"column":6},"source":"index.js","original":{"line":6,"column":6}},{"generated":{"line":11,"column":16},"source":"index.js","original":{"line":6,"column":2}},{"generated":{"line":11,"column":17},"source":"index.js","original":{"line":6,"column":17}},{"generated":{"line":11,"column":47},"source":"index.js","original":{"line":6,"column":2}},{"generated":{"line":11,"column":49},"source":"index.js","original":{"line":6,"column":49}},{"name":"key","generated":{"line":12,"column":0},"source":"index.js","original":{"line":6,"column":51}},{"name":"key","generated":{"line":12,"column":4},"source":"index.js","original":{"line":6,"column":51}},{"generated":{"line":12,"column":7},"source":"index.js","original":{"line":6,"column":54}},{"generated":{"line":12,"column":9},"source":"index.js","original":{"line":6,"column":56}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":6,"column":49}},{"generated":{"line":13,"column":3},"source":"index.js","original":{"line":6,"column":2}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":7,"column":1}},{"generated":{"line":14,"column":1},"source":"index.js","original":{"line":4,"column":0}}],"sources":{"index.js":"import * as JSB from '../../js/dist/webview.js'\n\n\nwindow.onClickCallNative = () => {\n  console.log('yes?')\n  JSB.callNative(\"io.appshell.bridge.test/test\", { key: \"value\" })\n}"},"lineCount":null}},"error":null,"hash":"5be9e2e39f79a0412eae41d373848cfd","cacheData":{"env":{}}}